{"ast":null,"code":"var _jsxFileName = \"/home/shiro/Documents/repositories/travel-tour/src/components/org.search-form/search-form.component.tsx\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { Strings } from '../../resources';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { VSeparator } from '../atm.separators';\nimport { FieldErrorMessage } from '../typography.style';\nexport const SearchForm = props => {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Row, {\n    noGutters: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.City), React.createElement(Form.Control, {\n    type: \"input\",\n    placeholder: Strings.Components.ResidencesForm.Placeholder.City,\n    onChange: props.onChangeCity,\n    onBlur: props.onBlurCity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), props.emptyCity && props.dirtyCity && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.EmptyCity)))), React.createElement(Row, {\n    noGutters: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formCheckinDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.CheckinDate), React.createElement(Form.Control, {\n    type: \"input\",\n    placeholder: Strings.Components.ResidencesForm.Placeholder.CheckinDate,\n    onChange: props.onChangeCheckinDate,\n    onBlur: props.onBlurCheckinDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    style: {\n      fontStyle: 'italic'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.DateFormat), props.checkinInvalidDateFormat && props.dirtyCheckin && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.InvalidDateFormat), props.checkinNonExistingDate && props.dirtyCheckin && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.NonExistingDate), props.checkinAfterCheckout && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.CheckingAfterCheckout))), React.createElement(Col, {\n    sm: {\n      span: 5,\n      offset: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formCheckoutDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.CheckoutDate), React.createElement(Form.Control, {\n    type: \"input\",\n    placeholder: Strings.Components.ResidencesForm.Placeholder.CheckoutDate,\n    onChange: props.onChangeCheckoutDate,\n    onBlur: props.onBlurCheckoutDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    style: {\n      fontStyle: 'italic'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.DateFormat), props.checkoutInvalidDateFormat && props.dirtyCheckout && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.InvalidDateFormat), props.checkoutNonExistingDate && props.dirtyCheckout && React.createElement(FieldErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, Strings.Error.ResidencesForm.NonExistingDate)))), React.createElement(VSeparator, {\n    half: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Row, {\n    noGutters: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: props.disabled,\n    variant: \"primary\",\n    onClick: props.onSubmit,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, Strings.Components.ResidencesForm.Submit)))));\n};","map":{"version":3,"sources":["/home/shiro/Documents/repositories/travel-tour/src/components/org.search-form/search-form.component.tsx"],"names":["React","Form","Button","Row","Strings","Col","Container","VSeparator","FieldErrorMessage","SearchForm","props","Components","ResidencesForm","City","Placeholder","onChangeCity","onBlurCity","emptyCity","dirtyCity","Error","EmptyCity","CheckinDate","onChangeCheckinDate","onBlurCheckinDate","fontStyle","DateFormat","checkinInvalidDateFormat","dirtyCheckin","InvalidDateFormat","checkinNonExistingDate","NonExistingDate","checkinAfterCheckout","CheckingAfterCheckout","span","offset","CheckoutDate","onChangeCheckoutDate","onBlurCheckoutDate","checkoutInvalidDateFormat","dirtyCheckout","checkoutNonExistingDate","disabled","onSubmit","Submit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAsBA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAgC;AACxD,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaN,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCC,IAA/C,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAET,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCE,WAAlC,CAA8CD,IAF7D;AAGE,IAAA,QAAQ,EAAEH,KAAK,CAACK,YAHlB;AAIE,IAAA,MAAM,EAAEL,KAAK,CAACM,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGN,KAAK,CAACO,SAAN,IAAmBP,KAAK,CAACQ,SAAzB,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BQ,SADhC,CATJ,CADF,CADF,CADF,EAoBE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAahB,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCS,WAA/C,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAEjB,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCE,WAAlC,CAA8CO,WAF7D;AAGE,IAAA,QAAQ,EAAEX,KAAK,CAACY,mBAHlB;AAIE,IAAA,MAAM,EAAEZ,KAAK,CAACa,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCa,UADrC,CARF,EAWGf,KAAK,CAACgB,wBAAN,IAAkChB,KAAK,CAACiB,YAAxC,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BgB,iBADhC,CAZJ,EAgBGlB,KAAK,CAACmB,sBAAN,IAAgCnB,KAAK,CAACiB,YAAtC,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BkB,eADhC,CAjBJ,EAqBGpB,KAAK,CAACqB,oBAAN,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BoB,qBADhC,CAtBJ,CADF,CADF,EA8BE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa9B,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCuB,YAA/C,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAE/B,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCE,WAAlC,CAA8CqB,YAF7D;AAGE,IAAA,QAAQ,EAAEzB,KAAK,CAAC0B,oBAHlB;AAIE,IAAA,MAAM,EAAE1B,KAAK,CAAC2B,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAkC,IAAA,KAAK,EAAE;AAAEb,MAAAA,SAAS,EAAE;AAAb,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkCa,UADrC,CARF,EAWGf,KAAK,CAAC4B,yBAAN,IAAmC5B,KAAK,CAAC6B,aAAzC,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BgB,iBADhC,CAZJ,EAgBGlB,KAAK,CAAC8B,uBAAN,IAAiC9B,KAAK,CAAC6B,aAAvC,IACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,OAAO,CAACe,KAAR,CAAcP,cAAd,CAA6BkB,eADhC,CAjBJ,CADF,CA9BF,CApBF,EA2EE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EF,EA4EE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEpB,KAAK,CAAC+B,QAAxB;AAAkC,IAAA,OAAO,EAAC,SAA1C;AAAoD,IAAA,OAAO,EAAE/B,KAAK,CAACgC,QAAnE;AAA6E,IAAA,KAAK,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,OAAO,CAACO,UAAR,CAAmBC,cAAnB,CAAkC+B,MADrC,CADF,CADF,CA5EF,CADF,CADF;AAwFD,CAzFM","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport { Strings } from '../../resources';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { VSeparator } from '../atm.separators';\nimport { FieldErrorMessage } from '../typography.style';\n\ninterface SearchFormInterface {\n  onChangeCity: (event: any) => void;\n  onChangeCheckinDate: (event: any) => void;\n  onChangeCheckoutDate: (event: any) => void;\n  onBlurCheckinDate: () => void;\n  onBlurCheckoutDate: () => void;\n  onBlurCity: () => void;\n  onSubmit: () => void;\n  disabled: boolean;\n  checkinInvalidDateFormat: boolean;\n  checkinNonExistingDate: boolean;\n  checkoutInvalidDateFormat: boolean;\n  checkoutNonExistingDate: boolean;\n  checkinAfterCheckout: boolean;\n  emptyCity: boolean;\n  dirtyCheckin: boolean;\n  dirtyCheckout: boolean;\n  dirtyCity: boolean;\n}\n\nexport const SearchForm = (props: SearchFormInterface) => {\n  return (\n    <Form>\n      <Container>\n        <Row noGutters={true}>\n          <Col sm={12}>\n            <Form.Group controlId=\"formCity\">\n              <Form.Label>{Strings.Components.ResidencesForm.City}</Form.Label>\n              <Form.Control\n                type=\"input\"\n                placeholder={Strings.Components.ResidencesForm.Placeholder.City}\n                onChange={props.onChangeCity}\n                onBlur={props.onBlurCity}\n              />\n              {props.emptyCity && props.dirtyCity &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.EmptyCity}\n                </FieldErrorMessage>\n              }\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row noGutters={true}>\n          <Col sm={5}>\n            <Form.Group controlId=\"formCheckinDate\">\n              <Form.Label>{Strings.Components.ResidencesForm.CheckinDate}</Form.Label>\n              <Form.Control\n                type=\"input\"\n                placeholder={Strings.Components.ResidencesForm.Placeholder.CheckinDate}\n                onChange={props.onChangeCheckinDate}\n                onBlur={props.onBlurCheckinDate}\n              />\n              <Form.Text className=\"text-muted\" style={{ fontStyle: 'italic' }}>\n                {Strings.Components.ResidencesForm.DateFormat}\n              </Form.Text>\n              {props.checkinInvalidDateFormat && props.dirtyCheckin &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.InvalidDateFormat}\n                </FieldErrorMessage>\n              }\n              {props.checkinNonExistingDate && props.dirtyCheckin &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.NonExistingDate}\n                </FieldErrorMessage>\n              }\n              {props.checkinAfterCheckout &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.CheckingAfterCheckout}\n                </FieldErrorMessage>\n              }\n            </Form.Group>\n          </Col>\n          <Col sm={{ span: 5, offset: 2 }}>\n            <Form.Group controlId=\"formCheckoutDate\">\n              <Form.Label>{Strings.Components.ResidencesForm.CheckoutDate}</Form.Label>\n              <Form.Control\n                type=\"input\"\n                placeholder={Strings.Components.ResidencesForm.Placeholder.CheckoutDate}\n                onChange={props.onChangeCheckoutDate}\n                onBlur={props.onBlurCheckoutDate}\n              />\n              <Form.Text className=\"text-muted\" style={{ fontStyle: 'italic' }}>\n                {Strings.Components.ResidencesForm.DateFormat}\n              </Form.Text>\n              {props.checkoutInvalidDateFormat && props.dirtyCheckout &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.InvalidDateFormat}\n                </FieldErrorMessage>\n              }\n              {props.checkoutNonExistingDate && props.dirtyCheckout &&\n                <FieldErrorMessage>\n                  {Strings.Error.ResidencesForm.NonExistingDate}\n                </FieldErrorMessage>\n              }\n            </Form.Group>\n          </Col>\n        </Row>\n        <VSeparator half={true} />\n        <Row noGutters={true}>\n          <Col>\n            <Button disabled={props.disabled} variant=\"primary\" onClick={props.onSubmit} block>\n              {Strings.Components.ResidencesForm.Submit}\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}